#!/bin/bash

# Use this like:
#
#  bash deploy-make
#
# If you want to download and use then:
#
# bash <(curl https://raw.github.com/nicferrier/docker-shell-deploy/master/deploy-make)

[ -f Dockerfile ] || { echo "No Dockerfile" ; exit 1; }
dockerExPort=$(sed -rne 's/EXPOSE ([0-9]+)/\1/p' Dockerfile)
[ $dockerExPort -gt 1000 ] || { echo "Bad exported port in Dockerfile" ; exit 1; }

# Now read some stuff
read -p "docker image: " dockerImage
read -p "nginx config: " nginxConfig
read -p "remote host name: " hostName

# Should we test anything about the hostName here?
# possibly:
#
#   ssh hostName sudo echo done
# or:
#   ssh hostName test -f $nginxConfig

url="https://raw.githubusercontent.com/nicferrier/docker-shell-deploy/master/deploy-helpers"
cat <<EOF > deploy
#!/bin/bash
# Docker deploy script generated by deploy-make

[ -f ./.deploy-test ] && source ./.deploy-test
[ -f ./.deploy ] \
    || curl $url -o ./.deploy \
    || { echo "can't http the deployscript" ; exit 1; }
. \$0/.deploy
dockerImage=$dockerImage
dockerExPort=$dockerExPort
nginxConfig=$nginxConfig
hostName=$hostName
deploy \${1:-"deploy"} $dockerImage $dockerExPort $nginxConfig $hostName
EOF

chmod u+x deploy

echo deploy script has been written, now just:  bash deploy
